name: Release

on:
  schedule:
    # 2 AM on Sunday
    - cron: "0 2 * * 0"
  workflow_dispatch:

concurrency:
  group: release
  cancel-in-progress: false

jobs:
  isthmus-native-image-mac-linux:
    name: Build Isthmus Native Image
    if: github.repository == 'substrait-io/substrait-java'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - uses: actions/setup-java@v5
        with:
          java-version: 25
          distribution: graalvm
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Report Java Version
        run: java -version
      - name: Build with Gradle
        run: |
          # fetch submodule tags since actions/checkout@v5 does not
          git submodule foreach 'git fetch --unshallow || true'

          ./gradlew nativeCompile
      - name: Smoke Test
        run: |
          ./isthmus-cli/src/test/script/smoke.sh
          ./isthmus-cli/src/test/script/tpch_smoke.sh
      - name: Rename the artifact to OS-unique name
        shell: bash
        run: |
          value=`mv isthmus-cli/build/native/nativeCompile/isthmus isthmus-cli/build/native/nativeCompile/isthmus-${{ matrix.os }}`
      - name: Publish artifact
        uses: actions/upload-artifact@v5
        with:
          name: isthmus-${{ matrix.os }}
          path: isthmus-cli/build/native/nativeCompile/isthmus-${{ matrix.os }}
  semantic-release:
    if: github.repository == 'substrait-io/substrait-java'
    runs-on: ubuntu-latest
    needs: isthmus-native-image-mac-linux
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.RELEASER_ID }}
          private-key: ${{ secrets.RELEASER_KEY }}
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0
          persist-credentials: false
          submodules: recursive
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: "17"
          distribution: "temurin"
      - uses: actions/setup-node@v6
        with:
          node-version: "20"
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
      - name: Download isthmus-ubuntu-latest binary
        uses: actions/download-artifact@v5
        with:
          name: isthmus-ubuntu-latest
          path: native/libs
      - name: Download isthmus-macOS-latest binary
        uses: actions/download-artifact@v5
        with:
          name: isthmus-macOS-latest
          path: native/libs
      - name: Get bot user ID
        id: bot-user-id
        run: |
          echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      - name: Run semantic-release
        run: ./ci/release/run.sh
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          GIT_AUTHOR_EMAIL: "${{ steps.bot-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
          GIT_COMMITTER_EMAIL: "${{ steps.bot-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          MAVENCENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USER }}
          MAVENCENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_KEY }}
